name: frontend production deployment
env:
  EB_PACKAGE_S3_BUCKET_NAME: "frontend-s3-production"
  EB_APPLICATION_NAME: "frontend-production"
  EB_ENVIRONMENT_NAME: "FrontendProduction-env"
  LOCAL_DEPLOY_PACKAGE_NAME: "frontend_package.zip"
  S3_DEPLOY_PACKAGE_NAME: "frontend_production_${{ github.sha }}.zip"
  AWS_REGION_NAME: "ca-central-1"
    
on:
  push:
    branches: [ deploy ]
  

jobs:
  build-to-s3:
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm install
      - name: npm audit fix
        run: npm audit fix
      - name: Gulp build
        run: gulp
      - name: rename package
        run: mv prod-build/${{ env.LOCAL_DEPLOY_PACKAGE_NAME }} ${{ env.S3_DEPLOY_PACKAGE_NAME }}

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{  secrets.AWS_ACCESS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy dev package to S3 bucket
        run: aws s3 cp ${{ env.S3_DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

  deploy-to-elasticbeanstalk:
    runs-on: ubuntu-latest
    needs: [ build-to-s3 ]

    steps:
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{  secrets.AWS_ACCESS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: create ElasticBeanstalk App
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.S3_DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
      - name: deploy ElasticBeanstalk App
        run: |
          aws elasticbeanstalk update-environment \
          --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label "Ver-${{ github.sha }}"
